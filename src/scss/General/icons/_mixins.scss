@use "./iconpacks/_iconpacks"as *;
@use "./iconpacks/_iconpack-D2L"as *;
@use "./iconpacks/_iconpack-toolbar"as *;
@use "./iconpacks/_iconpack-snap"as *;
@use "./iconpacks/_iconpack-LOM"as *;
@use "./iconpacks/_iconpack-QS"as *;
@use "./iconpacks/_iconpack-fontawesome"as *;
@use "./iconpacks/_iconpack-ribbons"as *;
@use "./_btn-system"as *;

@function encodecolor($string) {
    @if type-of($string)=='color'and str-index(#{$string}, '#')==1 {
        $hex: str-slice(ie-hex-str($string), 4);
        $string: unquote('#{$hex}');

        @return '%23'+$string;
    }

    @return $string;
}

@mixin getcode($name, $new-color) {

    //background-color:red;
    $icon-color: encodecolor($new-color);
    @include getIconsD2L($name, $icon-color);

    @include getIconsToolbar($name, $icon-color);
    @include getIconsSnap($name, $icon-color);
    @include getIconsLOM($name, $icon-color);
    @include getIconsQS($name, $icon-color);
    @include getIconsRibbons($name, $icon-color);
    @include getIconsFontawesome($name, $icon-color);

}

/* *************************************************************
 * adjust size
 * ************************************************************/
@mixin iconsize($size, $padding) {
    width: $size;
    height: $size;
    margin: $padding;


}

/* *************************************************************************
 * -------------------------------- generate icon extends-------------------
 * usage @include iconpack
 * ************************************************************************/
@mixin iconpack($class, $size, $color:#404040) {
    @if ($size==md) {
        $size: $small-btn;
    }

    @else {
        $size: $large-btn;

    }

    @include getcode($class, $color);
    background-repeat: no-repeat;
    width: $size;
    height: $size;
}

/* **********************************************
 * LOOP ICON THIS NEEDS WORK
 * ***********************************************/
@mixin loopIcons($ico-packs) {

    @each $pack-name,
    $pack in $ico-packs {

        @each $index,
        $value in $pack {

            //----------BUTTONS
            button[class*=snap-],
            input[type='button'][class*=snap-],
            input[type='file'][class*=snap-] {
                &.ico-#{$pack-name}-#{$value} {
                    &:before {
                        @if variable-exists(btn-icon-color) {

                            // I get output to the CSS file
                            html & {
                                @include getcode($value, $btn-icon-color);
                            }
                        }

                        @else {
                            @include getcode($value, #6c6c6c);
                        }
                    }

                    &:focus:before,
                    &:hover:before {
                        html & {
                            @include getcode($value, $btn-icon-color-hover);
                        }

                    }
                }
            }

            //----------RIBBONS

            .LOM-ribbon.icon-#{$value},
            .LOM-ribbon-top.icon-#{$value} {
                &:after {

                    @if variable-exists(ribbon-color) {
                        @include getcode($value, $ribbon-color);
                    }

                    @else {
                        @include getcode($value, #ffffff);
                    }


                }
            }

            .LOM-circle-ribbon.icon-#{$value},
            .LOM-square-ribbon.icon-#{$value},
            .LOM-iconbox>h2 {
                &:before {

                    @if variable-exists(ribbon-color) {
                        @include getcode($value, $ribbon-color);
                    }

                    @else {
                        @include getcode($value, #ffffff);
                    }


                }
            }

            .LOM-palecircle-ribbon.icon-#{$value},
            .LOM-palesquare-ribbon.icon-#{$value} {
                &:before {
                    @include getcode($value, $icon-default-color);
                }
            }


            .LOM-iconbox.icon-#{$value},
            .LOM-iconbox.icon-#{$value} {

                h2,
                h3,
                h4,
                h5,
                h6 {
                    &:first-child {
                        &:before {


                            @if variable-exists(iconbox-color) {

                                /* I get output to the CSS file */
                                html & {
                                    @include getcode($value, $iconbox-color);
                                }
                            }

                            @else {
                                @include getcode($value, #ffffff);
                            }
                        }
                    }
                }
            }



            //----------plain icons
            span.LOM-icon.icon-#{$value} {
                &:before {
                    @if variable-exists(ribbon-color) {
                        @include getcode($value, $ribbon-color);
                    }

                    @else {
                        @include getcode($value, #ffffff);
                    }

                }
            }
        }
    }
}